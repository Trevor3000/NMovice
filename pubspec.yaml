name: movie_app
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.4 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.



# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  #add more
  # 用于实现基于路由的导航和管理Flutter应用程序的扩展库
  go_router: ^6.0.9

  # 提供了Google字体的Flutter包，可轻松访问超过1000种字体系列

  google_fonts: ^4.0.1

  # Flutter的闪烁效果库，用于在加载数据时提高用户体验

  shimmer: ^2.0.0

  # Cupertino风格的图标
  cupertino_icons: ^1.0.2

  # 用于Flutter应用程序中实现业务逻辑的状态管理库
  flutter_bloc: ^8.1.1

  # Flutter状态管理库，用于分离业务逻辑和用户界面
  bloc: ^8.1.0

  # 一个Dart库，提供了在对象之间进行易于比较的值比较的工具
  equatable: ^2.0.5

  # 支持SVG格式的Flutter小部件
  flutter_svg: ^1.1.6

  # 用于Flutter应用程序的文本动画效果集合
  animated_text_kit: ^4.2.2

  # 用于Flutter应用程序的可扩展卡片小部件
  expansion_tile_card: ^2.0.0

  # 在Flutter应用程序中读写键值对的轻量级持久化存储解决方案
  shared_preferences: ^2.0.17

  # 提供多种矢量图标，以及Flutter小部件来使用这些图标
  iconly: ^1.0.1

  # 用于Flutter应用程序的无限滚动分页插件
  infinite_scroll_pagination: ^3.2.0

  # 用于Flutter应用程序的异步状态管理插件
  bloc_concurrency: ^0.2.0

  # 用于Flutter应用程序的快速、轻量级的NoSQL数据库解决方案
  hive: ^2.2.3

  # 用于获取平台特定的文件目录位置的Flutter插件
  path_provider: ^2.0.12

  # 带有缓存功能的网络图片加载器
  cached_network_image: ^3.2.3

  # Dart语言的响应式编程扩展库
  rxdart: ^0.27.7

  # 用于Flutter应用程序的YouTube播放器插件
  youtube_player_flutter: ^8.1.2

  # Flutter本地化库
  flutter_localizations:
    sdk: flutter

  # Flutter应用程序的国际化和本地化解决方案
  intl: any
  #国际化翻译
  intl_translation: any  

  # 如何使用国际化翻译：
  #  flutter pub run intl_translation:generate_from_arb   --output-dir=lib/l10n  lib/l10n/l10n.dart lib/l10n/*.arb
  

  # 用于Flutter应用程序的分享插件
  share_plus: ^6.3.1

  # 自定义Flutter包，用于访问电影数据API
  movies_data:
    path: packages/movies_data

  # 用于检查网络连接状态的Flutter插件
  internet_connection_checker: ^1.0.0+1

 
  # 网络请求
  dio: ^4.0.6

  # Flutter状态管理库，用于分离业务逻辑和用户界面
  get: ^4.1.4

  # 在Flutter应用程序中读写键值对的轻量级持久化存储解决方案
  #shared_preferences: ^2.0.5

  # 用于Dart语言中的JSON序列化和反序列化
  json_annotation: ^4.0.1

  # 官方iOS风格图标
  #cupertino_icons: ^1.0.4

  # Dart语言的同步锁实现
  synchronized: ^3.0.0

  # Toast提示框组件
  fluttertoast: ^8.0.3

  # 用于在Flutter应用程序中获取和请求系统权限
  permission_handler: ^10.2.0

  # 用于在Flutter应用程序中进行屏幕适配的插件
  flutter_screenutil: ^5.0.0+2

  # 支持查看高清大图的Flutter小部件
  photo_view: ^0.14.0

  # WebSocket客户端实现，支持多种协议
  web_socket_channel: ^2.1.0

  # 用于Flutter应用程序中选择文件的插件
  #file_picker: ^4.6.1

  # 在Flutter应用程序中选择图像的插件
  image_picker: ^0.8.2

  # 用于在Flutter应用程序中启动外部应用程序的插件
  url_launcher: ^6.0.9

  # 用于在Flutter应用程序中打开文件的插件
  #open_file: ^3.2.1
  file_utils: ^1.0.1

  # 在Flutter应用程序中下载文件的插件
  flutter_downloader: ^1.10.1+2

  # 用于访问平台特定文件系统路径的Flutter插件
  #path_provider: ^2.0.2

  # 在Flutter应用程序中呈现HTML内容的插件
  #flutter_html: ^2.2.1

  # 加载透明图片的Flutter插件
  transparent_image: ^2.0.1

  # 一个高度可配置的下拉刷新组件
  pull_to_refresh: 1.6.4-nullsafety.1

  # 一种简单易用的Toast提示框组件
  oktoast: ^3.0.0

  # 点赞组件，提供多种点赞效果
  like_button: ^2.0.2

  # 获取视频缩略图的Flutter插件
  video_thumbnail: ^0.5.3

  # 易于使用的Flutter加载指示器
  flutter_easyloading: ^3.0.0

  # Chewie是视频播放器库，可方便地封装VideoPlayer和其他常见的UI元素，例如进度条、全屏、播放/暂停按钮等。
  chewie: ^1.0.0

  # Flutter相机插件
  camera: ^0.8.1

  # Dart语言的事件总线实现
  event_bus: ^2.0.0

  # HTTP客户端，支持同步和异步请求
  sync_http: ^0.3.1

  # 无限滚动文本的Flutter小部件，可自定义滚动方向、速度等参数
  marquee: ^2.2.3

  # Flutter图片轮播组件
  flutter_swiper_null_safety: ^1.0.2

  # 状态管理库，提供依赖注入功能
  provider: ^6.0.5

  # Flutter视频播放器库
  video_player: ^2.2.4

  # 在Web上支持Flutter视频播放器
  video_player_web: ^2.0.13
  
  #广告滚动组件
  carousel_slider: ^4.2.1

  # 检测可视化中组件
  visibility_detector: ^0.4.0+2


dev_dependencies:
  flutter_launcher_icons: ^0.11.0
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  generate: true # Add this line
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

    # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/on-boarding.png
    - assets/images/logo.svg
    - assets/images/ic-search.svg
    - assets/images/ic-time.svg
    - assets/images/ic-star.svg
    - assets/images/home.svg
    - assets/images/play.svg
    - assets/images/user.svg
    - assets/images/ic_launcher.png

  fonts:
      - family: Urbanist
        fonts:
          - asset: assets/fonts/Urbanist-Regular.ttf
          - asset: assets/fonts/Urbanist-Medium.ttf
          - asset: assets/fonts/Urbanist-Light.ttf
          - asset: assets/fonts/Urbanist-Bold.ttf
            weight: 700
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
